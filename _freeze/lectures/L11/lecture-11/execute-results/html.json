{
  "hash": "c15216fa52b1ad7398fd8a427df71af8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Topic 11 -- Multiple Linear Regression\nauthor: Si Yang Han\nformat:\n  soles-revealjs:\n    logo: ../muddyqr.png\n    # footer: \"Scan the QR code to provide feedback on this lecture\"\nembed-resources: true\n---\n\n\n\n\n## Module overview\n\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.reveal .slide-logo {\n  height: 8rem !important;\n  max-height: 8rem !important;\n  bottom: -2px;\n  right: 10px;\n}\n</style>\n:::\n\n\n\n\n\n\n\n- [Week 9. Describing Relationships]{style=\"color: #D0D3D4;\"}\n    + [Correlation (calculation, interpretation)]{style=\"color: #D0D3D4;\"}\n    + [Regression (model structure, model fitting]{style=\"color: #D0D3D4;\"}\n    + [What/when/why/how]{style=\"color: #D0D3D4;\"}\n\n- [Week 10. Simple Linear Regression]{style=\"color: #D0D3D4;\"}\n    + [Can we use the model?(assumptions, hypothesis testing)]{style=\"color: #D0D3D4;\"}\n    + [How good is the model?(interpretation, model fit)]{style=\"color: #D0D3D4;\"}\n    \n- **Week 11. Multiple Linear Regression**\n    + Multiple Linear Regression (MLR) modelling\n    + Assumptions, interpretation and the principle of parsimony\n\n- [Week 12. Nonlinear Regression]{style=\"color: #D0D3D4;\"}\n    + [Common nonlinear functions]{style=\"color: #D0D3D4;\"}\n    + [Transformations]{style=\"color: #D0D3D4;\"}\n\n## Last week: simple linear regression\n\n$$ Y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i $$\n\nIdeal for predicting a continuous response variable from a single predictor variable: *\"How does $y$ change as $x$ changes?\"*\n\n* Identify/quantify relationships between variables\n* Predict future values\n\n. . .\n\n### What if we have more than one predictor?\n\nWhat is the model and how do we interpret the results?\n\n# Multiple linear regression\n\n> Nearly identical to simple linear regression, just more predictors!\n\n## History\n\n::: {.columns}\n::: {.column width=\"50%\"}\n![](images/galton.jpg)\n![](images/pearson.jpg)\n\n*Francis Galton and Karl Pearson*\n\n:::\n::: {.column width=\"50%\"}\n\n- First suggested by **Francis Galton** in 1886 while studying genetic variations in sweet peas over several generations\n- **Karl Pearson** developed the mathematical formula for multiple linear regression model later (early 1900s)\n\n:::\n:::\n\n> *“The somewhat complicated mathematics of multiple correlation, with its repeated appeals to the geometrical notions of hyperspace, remained a closed chamber to him.”*\n\n-- Pearson (1930), on Galton's work with MLR\n\n## Steps for Regression\n\n1.  Understand the variables\n2.  Explore data\n3.  Fit model\n4.  Check assumptions\n5.  Assess fit of model/s (parsimony)\n6.  Interpret output\n\n## Example: Air Quality in New York (1973)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(airquality)\ndplyr::glimpse(airquality)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 153\nColumns: 6\n$ Ozone   <int> 41, 36, 12, 18, NA, 28, 23, 19, 8, NA, 7, 16, 11, 14, 18, 14, …\n$ Solar.R <int> 190, 118, 149, 313, NA, NA, 299, 99, 19, 194, NA, 256, 290, 27…\n$ Wind    <dbl> 7.4, 8.0, 12.6, 11.5, 14.3, 14.9, 8.6, 13.8, 20.1, 8.6, 6.9, 9…\n$ Temp    <int> 67, 72, 74, 62, 56, 66, 65, 59, 61, 69, 74, 69, 66, 68, 58, 64…\n$ Month   <int> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Day     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n```\n\n\n:::\n:::\n\n\n\n\n. . .\n\nOzone ($O_3$) is a harmful air pollutant at ground level - the main component of smog:\n\n- `Ozone`: ozone concentration (ppb)\n- `Solar.R`: solar radiation (lang, Langleys)\n- `Wind`: wind speed (mph)\n- `Temp`: ambient temperature (degrees F)\n- `Month`: month (1-12)\n- `Day`: day of the month (1-31)\n\n## Scatterplots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(airquality)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n\n## Correlations via base R\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(airquality, use = \"complete.obs\") |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Ozone Solar.R  Wind  Temp Month   Day\nOzone    1.00    0.35 -0.61  0.70  0.14 -0.01\nSolar.R  0.35    1.00 -0.13  0.29 -0.07 -0.06\nWind    -0.61   -0.13  1.00 -0.50 -0.19  0.05\nTemp     0.70    0.29 -0.50  1.00  0.40 -0.10\nMonth    0.14   -0.07 -0.19  0.40  1.00 -0.01\nDay     -0.01   -0.06  0.05 -0.10 -0.01  1.00\n```\n\n\n:::\n:::\n\n\n\n\n## Correlations via `corrplot`\n\n<!---\nExplain how to interpret these\n--->\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrplot::corrplot(cor(airquality, use = \"complete.obs\"), method = \"circle\")\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n\n## Correlations via `psych`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych::pairs.panels(airquality)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n\n- What predictors could be useful to predict `Ozone`? \n\n. . .\n\n`Temp` ($r$ = 0.70), `Wind` ($r$ = -0.60) and `Solar.R` ($r$ = 0.35) are the most correlated with `Ozone`.\n\nWhat can we understand about the relationship between `Ozone` and `Temp` ($r$ = 0.70)?\n\n## Relationship {auto-animate=\"true\"} \n\nWhat can we understand about the relationship between `Ozone` and `Temp` ($r$ = 0.70)?\n\n. . .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = airquality, aes(x = Temp, y = Ozone)) +\n  geom_point() + \n  labs(x = expression(\"Temperature \" (degree~F)), y = \"Ozone (ppb)\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n\n. . .\n\nThe higher the temperature, the higher the ozone concentration. The relationship is almost linear.\n\n## Fitting a simple model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lm(formula = Ozone ~ Temp, data = airquality)\n```\n:::\n\n\n\n\n- Simple linear regression between `Ozone` and `Temp`\n- This is our baseline or control model\n\n## Assumptions via base R\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n\n## Assumptions via `ggfortify`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggfortify)\nggplot2::autoplot(fit) # requires ggfortify but is a ggplot2 function\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n\n## Interpretation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Ozone ~ Temp, data = airquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.729 -17.409  -0.587  11.306 118.271 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\nTemp           2.4287     0.2331  10.418  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.71 on 114 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.4877,\tAdjusted R-squared:  0.4832 \nF-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n- `Temp` is a statistically significant predictor of `Ozone` (p < .001).\n- The (simple linear) model explains 49% of variance (R^2^ = 0.49).\n\n. . .\n\n**Can we improve the model in other ways?** Maybe - by transforming or adding more variables.\n\n## Principle of parsimony\n\n- Also known as Occam's razor;\n\n> *Entia non sunt multiplicanda praeter necessitatem.*\n> *“Entities should not be multiplied without necessity.”*\n\n- Oxford definition;\n\n> The most acceptable explanation of an occurrence, phenomenon, or event is the simplest, involving the fewest entities, assumptions, or changes.\n\n- Simple is best; i.e. if a simple (one variable) model and a complex (many variables) model predict similarly well, the simple model is preferred.\n\n. . .\n\n### A parsimonius model:\n\n- Has only *useful* predictors\n- No *redundant* predictors\n\n## The problem with using too many predictors\n\n- Generally, the more predictors we add, the better the model fits data\n- However, adding too many may cause **overfitting**, i.e. the model becomes too complex\n- An overfitted model won't be able to **generalise** to new data\n\n![](images/fit.jpg)\n\n## The multiple linear regression model {auto-animate=\"true\"}\n\nAn extension of simple linear regression to include **more than one** predictor variable: *\"How does $y$ change as $x_1$, $x_2$, ..., $x_k$ change?\"*\n\n$$ Y_i = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k + \\epsilon_i $$\n\n:::{.fragment} \nTherefore, estimating the model involves *estimating the values of* $\\beta_0$, $\\beta_1$, $\\beta_2$, ..., $\\beta_k$.\n\n- $\\beta_0$ is the intercept\n- $\\beta_1$ to $\\beta_k$ are the partial regression coefficients\n- $\\epsilon$ is the error (residual) term\n:::\n\n:::{.fragment}\n### Fit MLR model to Air Quality data\n\nThe variables `Month` and `Day` are not useful predictors, so we will exclude them from the model.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi <- lm(formula = Ozone ~ Solar.R + Wind + Temp, data = airquality)\n# fit_multi <- lm(formula = Ozone ~ .-Month -Day, data = airquality) # all variables excluding Month and Day\n```\n:::\n\n\n\n:::\n\n## Visualisation: not easy {auto-animate=\"true\"}\n\nAre the plots useful?\n\n### 3D plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(data = airquality, \n  x = ~Temp, y = ~Ozone, z = ~Solar.R,\n  type = \"scatter3d\", mode = \"markers\", opacity = 0.5)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-3ef750efbd4b214a49fb\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3ef750efbd4b214a49fb\">{\"x\":{\"visdat\":{\"e3da75a31728\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"e3da75a31728\",\"attrs\":{\"e3da75a31728\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"opacity\":0.5,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"Temp\"},\"yaxis\":{\"title\":\"Ozone\"},\"zaxis\":{\"title\":\"Solar.R\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[67,72,74,62,65,59,61,69,66,68,58,64,66,57,68,62,59,73,61,61,67,81,79,76,82,90,87,82,77,72,65,73,76,84,85,81,83,83,88,92,92,89,73,81,80,81,82,84,87,85,74,86,85,82,86,88,86,83,81,81,81,82,89,90,90,86,82,80,77,79,76,78,78,77,72,79,81,86,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,75,76,68],\"y\":[41,36,12,18,23,19,8,16,11,14,18,14,34,6,30,11,1,11,4,32,23,45,115,37,29,71,39,23,21,37,20,12,13,135,49,32,64,40,77,97,97,85,10,27,7,48,35,61,79,63,16,80,108,20,52,82,50,64,59,39,9,16,122,89,110,44,28,65,22,59,23,31,44,21,9,45,168,73,76,118,84,85,96,78,73,91,47,32,20,23,21,24,44,21,28,9,13,46,18,13,24,16,13,23,36,7,14,30,14,18,20],\"z\":[190,118,149,313,299,99,19,256,290,274,65,334,307,78,322,44,8,320,25,92,13,252,223,279,127,291,323,148,191,284,37,120,137,269,248,236,175,314,276,267,272,175,264,175,48,260,274,285,187,220,7,294,223,81,82,213,275,253,254,83,24,77,255,229,207,192,273,157,71,51,115,244,190,259,36,212,238,215,203,225,237,188,167,197,183,189,95,92,252,220,230,259,236,259,238,24,112,237,224,27,238,201,238,14,139,49,20,193,191,131,223],\"mode\":\"markers\",\"opacity\":0.5,\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Visualisation: not easy\n\nAre the plots useful?\n\n### 4D plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(data = airquality, \n  x = ~Temp, y = ~Ozone, z = ~Solar.R, color = ~Wind,\n  type = \"scatter3d\", mode = \"markers\", opacity = 0.5)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-fe76d9814be100c137cd\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fe76d9814be100c137cd\">{\"x\":{\"visdat\":{\"e3da3148a04c\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"e3da3148a04c\",\"attrs\":{\"e3da3148a04c\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"opacity\":0.5,\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"Temp\"},\"yaxis\":{\"title\":\"Ozone\"},\"zaxis\":{\"title\":\"Solar.R\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[67,72,74,62,65,59,61,69,66,68,58,64,66,57,68,62,59,73,61,61,67,81,79,76,82,90,87,82,77,72,65,73,76,84,85,81,83,83,88,92,92,89,73,81,80,81,82,84,87,85,74,86,85,82,86,88,86,83,81,81,81,82,89,90,90,86,82,80,77,79,76,78,78,77,72,79,81,86,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,75,76,68],\"y\":[41,36,12,18,23,19,8,16,11,14,18,14,34,6,30,11,1,11,4,32,23,45,115,37,29,71,39,23,21,37,20,12,13,135,49,32,64,40,77,97,97,85,10,27,7,48,35,61,79,63,16,80,108,20,52,82,50,64,59,39,9,16,122,89,110,44,28,65,22,59,23,31,44,21,9,45,168,73,76,118,84,85,96,78,73,91,47,32,20,23,21,24,44,21,28,9,13,46,18,13,24,16,13,23,36,7,14,30,14,18,20],\"z\":[190,118,149,313,299,99,19,256,290,274,65,334,307,78,322,44,8,320,25,92,13,252,223,279,127,291,323,148,191,284,37,120,137,269,248,236,175,314,276,267,272,175,264,175,48,260,274,285,187,220,7,294,223,81,82,213,275,253,254,83,24,77,255,229,207,192,273,157,71,51,115,244,190,259,36,212,238,215,203,225,237,188,167,197,183,189,95,92,252,220,230,259,236,259,238,24,112,237,224,27,238,201,238,14,139,49,20,193,191,131,223],\"mode\":\"markers\",\"opacity\":0.5,\"type\":\"scatter3d\",\"marker\":{\"colorbar\":{\"title\":\"Wind\",\"ticklen\":2},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[7.4000000000000004,8,12.6,11.5,8.5999999999999996,13.800000000000001,20.100000000000001,9.6999999999999993,9.1999999999999993,10.9,13.199999999999999,11.5,12,18.399999999999999,11.5,9.6999999999999993,9.6999999999999993,16.600000000000001,9.6999999999999993,12,12,14.9,5.7000000000000002,7.4000000000000004,9.6999999999999993,13.800000000000001,11.5,8,14.9,20.699999999999999,9.1999999999999993,11.5,10.300000000000001,4.0999999999999996,9.1999999999999993,9.1999999999999993,4.5999999999999996,10.9,5.0999999999999996,6.2999999999999998,5.7000000000000002,7.4000000000000004,14.300000000000001,14.9,14.300000000000001,6.9000000000000004,10.300000000000001,6.2999999999999998,5.0999999999999996,11.5,6.9000000000000004,8.5999999999999996,8,8.5999999999999996,12,7.4000000000000004,7.4000000000000004,7.4000000000000004,9.1999999999999993,6.9000000000000004,13.800000000000001,7.4000000000000004,4,10.300000000000001,8,11.5,11.5,9.6999999999999993,10.300000000000001,6.2999999999999998,7.4000000000000004,10.9,10.300000000000001,15.5,14.300000000000001,9.6999999999999993,3.3999999999999999,8,9.6999999999999993,2.2999999999999998,6.2999999999999998,6.2999999999999998,6.9000000000000004,5.0999999999999996,2.7999999999999998,4.5999999999999996,7.4000000000000004,15.5,10.9,10.300000000000001,10.9,9.6999999999999993,14.9,15.5,6.2999999999999998,10.9,11.5,6.9000000000000004,13.800000000000001,10.300000000000001,10.300000000000001,8,12.6,9.1999999999999993,10.300000000000001,10.300000000000001,16.600000000000001,6.9000000000000004,14.300000000000001,8,11.5],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[7.4000000000000004,8,12.6,11.5,8.5999999999999996,13.800000000000001,20.100000000000001,9.6999999999999993,9.1999999999999993,10.9,13.199999999999999,11.5,12,18.399999999999999,11.5,9.6999999999999993,9.6999999999999993,16.600000000000001,9.6999999999999993,12,12,14.9,5.7000000000000002,7.4000000000000004,9.6999999999999993,13.800000000000001,11.5,8,14.9,20.699999999999999,9.1999999999999993,11.5,10.300000000000001,4.0999999999999996,9.1999999999999993,9.1999999999999993,4.5999999999999996,10.9,5.0999999999999996,6.2999999999999998,5.7000000000000002,7.4000000000000004,14.300000000000001,14.9,14.300000000000001,6.9000000000000004,10.300000000000001,6.2999999999999998,5.0999999999999996,11.5,6.9000000000000004,8.5999999999999996,8,8.5999999999999996,12,7.4000000000000004,7.4000000000000004,7.4000000000000004,9.1999999999999993,6.9000000000000004,13.800000000000001,7.4000000000000004,4,10.300000000000001,8,11.5,11.5,9.6999999999999993,10.300000000000001,6.2999999999999998,7.4000000000000004,10.9,10.300000000000001,15.5,14.300000000000001,9.6999999999999993,3.3999999999999999,8,9.6999999999999993,2.2999999999999998,6.2999999999999998,6.2999999999999998,6.9000000000000004,5.0999999999999996,2.7999999999999998,4.5999999999999996,7.4000000000000004,15.5,10.9,10.300000000000001,10.9,9.6999999999999993,14.9,15.5,6.2999999999999998,10.9,11.5,6.9000000000000004,13.800000000000001,10.300000000000001,10.300000000000001,8,12.6,9.1999999999999993,10.300000000000001,10.300000000000001,16.600000000000001,6.9000000000000004,14.300000000000001,8,11.5]}},\"frame\":null},{\"x\":[57,97],\"y\":[1,168],\"type\":\"scatter3d\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"Wind\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"color\":[2.2999999999999998,20.699999999999999],\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"z\":[7,334],\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Partial regression coefficients {auto-animate=\"true\"}\n\nGiven the multiple linear model:\n$$ Y_i = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k + \\epsilon_i $$\n\n\nThe partial regression coefficient for a predictor $x_i$ is the amount by which the response variable $Y$ changes when $x_k$ is increased by one unit, **while all other predictors are held constant**.\n\n$$ \\beta_k = \\frac{\\Delta Y}{\\Delta x_k} $$\n\n. . .\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequatiomatic::extract_eq(fit_multi)\n```\n\n::: {.cell-output-display}\n$$\n\\operatorname{Ozone} = \\alpha + \\beta_{1}(\\operatorname{Solar.R}) + \\beta_{2}(\\operatorname{Wind}) + \\beta_{3}(\\operatorname{Temp}) + \\epsilon\n$$\n\n:::\n:::\n\n\n\n\n> *With `Wind` and `Solar.R` held constant, how does `Temp` affect `Ozone`?*\n\n## Partial regression coefficients: visualisation {auto-animate=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsjPlot::plot_model(fit_multi,\n  type = \"pred\", \n  terms = c(\"Temp\", \"Solar.R\", \"Wind\"), \n  ci.lvl = NA)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n\n> *With `Wind` and `Solar.R` held constant, how does `Temp` affect `Ozone`?*\n\n:::{.callout-note}\nNot necessary to do this - lecture content only.\n:::\n\n## Interpreting the partial regression coefficients\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Ozone ~ Solar.R + Wind + Temp, data = airquality)\n\nCoefficients:\n(Intercept)      Solar.R         Wind         Temp  \n  -64.34208      0.05982     -3.33359      1.65209  \n```\n\n\n:::\n:::\n\n\n\n\n:::{.fragment}\nHolding **all** other variables constant:\n\n- For every 1 unit increase in `Solar.R`, `Ozone` increases by a mean value of 0.06 ppb.\n- For every 1 degree increase in `Temp`, `Ozone` increases by a mean value of 1.65 ppb.\n- For every 1 unit increase in `Wind`, `Ozone` decreases by a mean value of 3.33 ppb.\n:::\n\n:::{.fragment}\n:::{.callout-caution}\nIf the model is not \"valid\" (via assumptions or hypothesis), then the partial regression coefficients are not meaningful.\n:::\n:::\n\n## Assumptions\n\nIn SLR, the model is made up of the [**deterministic**]{style=\"color:seagreen\"} component (the line) and the [***random***]{style=\"color:firebrick\"}  component (the error term).\n\n$$ Y_i = \\color{seagreen}{\\beta_0 + \\beta_1 x_i} + \\color{firebrick}\\epsilon_i $$\n\n. . .\n\n**This is the same for MLR:**\n$$ Y_i = \\color{seagreen}{\\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k} + \\color{firebrick}{\\epsilon_i} $$\n\nSince *only* the error term is random, the assumptions are *still* about the error term (residuals), $\\hat\\epsilon$, which is simple to assess!\n\n## Assumptions - CLINE\n\nAs with Simple Linear Regression, we need to check the assumptions of the model (LINE):\n\n- **L**inearity: the relationships between the response and the predictors are all linear.\n- **I**ndependence: the observations are independent of each other.\n- **N**ormality: the residuals are normally distributed.\n- **E**qual variance: the variance of the residuals is constant.\n\nWith one extra assumption!\n\n- **Collinearity**: there is no perfect linearity between predictors\n\nTwo predictors that have a *perfect* linear relationship (i.e. $r$ = 1 or -1) breaks the assumption of collinearity. High (but not perfect) collinearity (e.g. strong/very strong $r$) does not break the assumption but can lead to unstable estimates and large standard errors.\n\n> The largest correlation between the predictors is between Temp and Wind ($r$ = -0.5). This is not a problem.\n\n## Assumptions of MLR \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit_multi)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n\n## Transformation using `log()`\n\nSome evidence of non-linearity in the diagnostic plots. Transform and re-check assumptions.\n\n. . .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi_log <- lm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit_multi_log)\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n\n## Results -- MLR vs SLR {auto-animate=\"true\"} \n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit_multi_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,\tAdjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Ozone ~ Temp, data = airquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.729 -17.409  -0.587  11.306 118.271 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\nTemp           2.4287     0.2331  10.418  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.71 on 114 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.4877,\tAdjusted R-squared:  0.4832 \nF-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n:::\n::::\n\n- All three predictors are statistically significant (p < .001).\n- The MLR model explains 66% of variance (adjusted R^2^ = 0.66), whereas the SLR explains 48% of variance (multiple R^2^ = 0.48).\n- Thus the MLR is the better model.\n\n## Hypothesis Testing\n\nFor multiple linear regression, there are two hypothesis tests:\n\n- Individual predictors, where the significance of each predictor is tested via t-tests\n\n$$H_0: \\beta_k = 0$$\n$$H_1: \\beta_k \\neq 0$$\n- The overall model, which is tested with an F-test (to get F-stat). $H_0$ is an intercept-only model (i.e. the mean), so if at least one predictor is useful, the model is better than the intercept-only model.\n\n$$H_0: \\beta_1 = \\beta_2 = ... = \\beta_k = 0$$\n$$H_1: \\text{At least one } \\beta_k \\neq 0$$\n## Interpreting coefficients\n\n```r\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n```\n\nAll three predictors are statistically significant (p < .001). **Holding all other variables constant:**\n\n- For every 1 unit increase in `Solar.R`, `log(Ozone)` increases by a mean value of 0.0025, \n- For every 1 unit increase in `Wind`, `log(Ozone)` decreases by a mean value of 0.062, \n- For every 1 degree increase in `Temp`, `log(Ozone)` increases by a mean value of 0.049.\n\nOR\n\n- For every 1 unit increase in `Solar.R`, `Ozone` increases by *approximately* a mean value of 0.25%,\n- For every 1 unit increase in `Wind`, `Ozone` decreases by *approximately* a mean value of 6.2%,\n- For every 1 degree increase in `Temp`, `Ozone` increases by *approximately* a mean value of 4.9%.\n\n## Model fit\n\n```r\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n\nOn average, the model predicts `log(Ozone)` within 0.51 ppb (**residual standard error**) of the true value. *Not bad?*\n\n. . .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp(0.51) #backtransform\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.665291\n```\n\n\n:::\n:::\n\n\n\n\n- On average, the model predicts `Ozone` within 1.67 ppb of the true value.\n- Degrees of freedom (107) = number of observations (111) - number of predictors in the model (3) - 1\n\n. . .\n\nIf there are >1 predictors, use the **adjusted R-Squared** as it penalises the model for having more predictors that are not useful.\n\n- The MLR model explains 66% of variance (adjusted R^2^ = 0.66)\n\n## The R^2^ value\n\nThe R-squared value is the proportion of variance explained by the model.\n\n$$ R^2 = \\frac{SS_{reg}}{SS_{tot}} = 1 - \\frac{SS_{res}}{SS_{tot}} $$\n\nThe adjusted R-squared value is the proportion of variance explained by the model, adjusted for the number of predictors.\n\n$$ R^2_{adj} = 1 - \\frac{SS_{res}}{SS_{tot}} \\frac{n-1}{n-p-1} $$\n\nwhere $n$ is the number of observations and $p$ is the number of predictors.\n\n## F-stat\n\n```r\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n\n- The F-statistic tests the null hypothesis that all the regression coefficients are equal to zero, i.e. $H_0: \\beta_1 = \\beta_2 = ... = \\beta_k = 0$.\n- As a ratio, it tells us how much better the model is than the null model (i.e. a model with no predictors, the mean).\n- If the p-value is less than our specified critical value (e.g. 0.05), we reject the null hypothesis and conclude that the current model is better than the null model.\n\n## Reporting {auto-animate=\"true\"}\n\nA quick (but not complete) summary:\n\n- New York air quality data was collected in 1973 by the New York State Department of Conservation and the National Weather Service (meteorological data). There were 111 observations of 6 variables.\n\n- There were non-linear relationships between `Ozone` (the response) and `Temp`, `Wind` and `Solar.R` (the predictors), hence a natural log transformation was applied to `Ozone`.\n\n- Multiple linear regression was conducted on these variables, and model assumptions (CLINE) were met.\n\n- Solar radiation, wind speed and temperature are **significant predictors** of Ozone concentration (**p < 0.001**) with the model accounting for **66% of the variation** in weight. The model explained more variance than a one-predictor model and was found to be significantly better than the null model.\n\n# Abalone Quiz\n\n![](images/abalone.jpg)\n\n> Pop quiz! (No marks, just check your understanding.)\n\n## Context\n\nAbalone are marine snails that are a considered a delicacy and very expensive. The older the abalone, the higher the price. Age is determined by counting the number of rings in the shell. To do this, the shell needs to be cut, stained and viewed under a microscope - which is a lot of effort. Researchers measured 9 attributes of the abalone: `sex`, `length`, `diameter`, `height`, `whole`, `shucked`, `viscera`, `shell`, and `rings`.\n\nNote: `whole`, `shucked`, `viscera` and `shell` are weight measurements.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabalone <- read.csv(\"data/abalone.csv\")\n\nset.seed(1113)          # reproducible randomness\nabalone <- abalone %>% \n  select(-sex) %>%      # remove `sex` because it is categorical\n  sample_n(100)         # sample 100 observations for cleaner curve\n  \nstr(abalone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t100 obs. of  8 variables:\n $ length  : num  0.52 0.71 0.33 0.67 0.65 0.35 0.695 0.52 0.6 0.61 ...\n $ diameter: num  0.405 0.57 0.255 0.55 0.51 0.25 0.53 0.41 0.475 0.48 ...\n $ height  : num  0.14 0.195 0.095 0.17 0.19 0.1 0.15 0.14 0.15 0.17 ...\n $ whole   : num  0.692 1.348 0.188 1.247 1.542 ...\n $ shucked : num  0.276 0.8985 0.0735 0.472 0.7155 ...\n $ viscera : num  0.137 0.444 0.045 0.245 0.373 ...\n $ shell   : num  0.215 0.454 0.06 0.4 0.375 ...\n $ rings   : int  11 11 7 21 9 7 14 11 10 10 ...\n```\n\n\n:::\n:::\n\n\n\n\n## Scatterplots and correlations\n\nWe remove `sex` from the dataset (not numerical), and subset 100 samples for a cleaner view.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych::pairs.panels(abalone)     # visualise relationships\n```\n\n::: {.cell-output-display}\n![](lecture-11_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n\n## Full model\n\nWe use natural log transformation on the response variable with `log()` to account for non-linear relationships.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lm(log(rings) ~ ., data = abalone)\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(rings) ~ ., data = abalone)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.37297 -0.12727 -0.01584  0.08787  0.61636 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  1.34626    0.18219   7.389 6.57e-11 ***\nlength      -1.25389    1.50969  -0.831  0.40837    \ndiameter     3.24138    1.91481   1.693  0.09388 .  \nheight       2.26408    1.34813   1.679  0.09646 .  \nwhole        0.03089    0.29250   0.106  0.91612    \nshucked     -1.30902    0.38861  -3.368  0.00111 ** \nviscera     -0.24785    0.55098  -0.450  0.65389    \nshell        1.73328    0.60179   2.880  0.00494 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1996 on 92 degrees of freedom\nMultiple R-squared:  0.6187,\tAdjusted R-squared:  0.5897 \nF-statistic: 21.32 on 7 and 92 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n## All models\n\nHere, the model is fit with all predictors, then the least significant predictor is removed. This process is repeated until only one predictor remains.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(broom)\n\nfull7 <- lm(log(rings) ~ ., data = abalone)\npart6 <- update(full7, . ~ . - whole)\npart5 <- update(part6, . ~ . - viscera)\npart4 <- update(part5, . ~ . - length)\npart3 <- update(part4, . ~ . - height)\npart2 <- update(part3, . ~ . - diameter)\npart1 <- update(part2, . ~ . - shucked)\n\nformulas <- c(part1$call$formula, \n              part2$call$formula, \n              part3$call$formula, \n              part4$call$formula, \n              part5$call$formula, \n              part6$call$formula, \n              full7$call$formula)\n\nrs <- bind_rows(glance(part1),\n                glance(part2),\n                glance(part3),\n                glance(part4),\n                glance(part5),\n                glance(part6),\n                glance(full7)) %>%\n  mutate(Model = formulas, n = 1:7) %>%\n  select(Model, n, r.squared, adj.r.squared) %>%\n  mutate_if(is.numeric, round, 3)\n\nknitr::kable(rs)\n```\n\n::: {.cell-output-display}\n\n\n|Model                                                                     |  n| r.squared| adj.r.squared|\n|:-------------------------------------------------------------------------|--:|---------:|-------------:|\n|log(rings) ~ shell                                                        |  1|     0.445|         0.439|\n|log(rings) ~ shucked + shell                                              |  2|     0.557|         0.548|\n|log(rings) ~ diameter + shucked + shell                                   |  3|     0.604|         0.591|\n|log(rings) ~ diameter + height + shucked + shell                          |  4|     0.614|         0.598|\n|log(rings) ~ length + diameter + height + shucked + shell                 |  5|     0.618|         0.597|\n|log(rings) ~ length + diameter + height + shucked + viscera + ,     shell |  6|     0.619|         0.594|\n|log(rings) ~ .                                                            |  7|     0.619|         0.590|\n\n\n:::\n:::\n\n\n\n\n## Reduced model\n\n```r\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   1.4122     0.1594   8.859 4.19e-14 ***\ndiameter      2.0346     0.6034   3.372  0.00108 ** \nshucked      -1.3339     0.2152  -6.200 1.42e-08 ***\nshell         2.0486     0.3672   5.579 2.23e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n```\n# How did you do?\n\n> Read exam questions carefully and use the process of elimination.\n\n## Model and variable selection\n\n- Aim is to achieve the best balance between **model fit** and **model complexity**.\n- Follow the rules of parsimony: the simplest model that explains the data is the best, given similar model fit.\n  - Consider the effect of removing non-significant predictors from the model.\n  - If model fit (i.e. R^2^) reduces drastically, keep the predictor, else keep culling.\n- Covered in more detail in **second year (ENVX2001)** (stepwise regression)\n\n## Summary\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n**Multiple Linear Regression**\n\n- More than one predictor\n- Fit y to multiple x -- multiple dimensions (hyperplane)\n- Principle: minimise sum of squared residuals\n- Assumptions: CLINE (collinearity)\n- Adjusted R-squared\n\n:::\n\n::: {.column width=\"50%\"}\n\n**Simple Linear Regression**\n\n- One predictor, fit a straight line\n- Fit straight line between y and x\n- Principle: minimise sum of squared residuals\n- Assumptions: LINE\n- Multiple R-squared\n\n:::\n::::\n\n# Thanks!\n\nThis presentation is based on the [SOLES Quarto reveal.js template](https://github.com/usyd-soles-edu/soles-revealjs) and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by].\n\n<!-- Links -->\n[cc-by]: http://creativecommons.org/licenses/by/4.0/",
    "supporting": [
      "lecture-11_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}