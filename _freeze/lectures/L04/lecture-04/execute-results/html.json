{
  "hash": "6d7f1e41431199c95ec1ee97b3197170",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Topic 4 -- Normal and sampling distributions\"\nauthor: Januar Harianto\nformat: soles-revealjs\nembed-resources: true\nexecute:\n  cache: true\n---\n\n\n\n\n\n\n# Opening Questions\n\n- How do we know if water quality meets environmental standards?\n- What sample size do we need for reliable biodiversity surveys?\n- How can we predict extreme climate events?\n\n\n## Today's Journey\n\n1. Normal Distribution\n   - Environmental patterns\n   - Probability calculations\n2. Sampling Distributions\n   - From samples to populations\n3. Central Limit Theorem\n   - Making reliable predictions\n\n\n## Why This Matters\n\n## Common Environmental Applications\n\n- Water quality monitoring\n- Species population assessment\n- Climate variation analysis\n- Pollution level compliance\n\n\n## Common Confusions to Avoid\n\n## Watch Out For These!\n\n1. Population vs Sample\n   * Population parameters (μ, σ) are usually unknown\n   * We estimate them from sample statistics ($\\bar{x}$, s)\n   * Example: All possible stream temperatures vs our measurements\n\n2. Distribution Shape vs Mean\n   * Same mean doesn't mean same distribution\n   * Need to consider spread and shape\n   * Example: Two sites with same average temperature but different variability\n\n3. Sample Size Effects\n   * Larger samples = Better estimates\n   * But how large is \"large enough\"?\n   * Depends on how variable your data is\n\n# Learning Outcomes\n\n- Understand what a (probability) distribution is:\n  - the properties of a continuous distribution.\n- Use Normal Distribution to understand/describe data\n  - Be able to standardise a Normal;\n  - Calculate probabilities based on Normal Distribution using R.\n- Know that there are other continuous distributions useful in hypothesis testing.\n- Distinguish between population, sample and sampling distributions;\n- Distinguish between a standard deviation and standard error of the mean;\n- Describe the Central Limit Theorem;\n- Use R and Excel to calculate the standard error and probabilities associated with sampling distributions;\n\n\n\n\n\n# Types of data\n\n- Numerical\n  - Continuous:  yield, weight\n  - Discrete:  weeds per $m^2$\n\n- Categorical\n  - Binary:  2 mutually exclusive categories\n  - Ordinal:  categories ranked in order\n  - Nominal:  qualitative data\n\n\n\n# Example\n\n- The gestation period (in days) for American Simmental cattle is distributed with mean 284.3 and standard deviation 5.52. How often is a calf born a week early?\n\n[Wray et al. 1987](https://www.ncbi.nlm.nih.gov/pubmed/3667470)\n\n![](images/Wray_etal_1987.png)\n\n![Eryk - stock.adobe.com](images/AdobeStock_283172794.jpeg)\n\n\n\n\n\n# What is a distribution\n\n- In our case we are generally referring to a distribution function\n  - This is a function (or model) that describes the probability that a system will take on value or set of values ${x}$\n\n- For any variable $X$, we describe probabilities by\n  - Discrete variables: probability distribution function $P(X=x)$\n  - Continuous variables: probability density function $f(x)$\n  - Discrete and Continuous variables: cumulative density function $F(x) = P(X≤x)$\n\n\n\n# Environmental Data Example: Water Temperature\n\nIn environmental science, we often need to understand the pattern of measurements to make decisions. Let's look at stream temperature monitoring:\n\n## Temperature Monitoring Background\n\n- Daily water temperature measurements follow patterns\n- Understanding these patterns helps protect aquatic life\n- We need to assess risks of extreme temperatures\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define parameters\ntemp_mean <- 22 # Mean temperature in °C\ntemp_sd <- 1.5 # Standard deviation in °C\nthresh <- 24 # Environmental threshold\n\n# Create temperature range for plotting\ntemp_range <- seq(temp_mean - 4 * temp_sd, temp_mean + 4 * temp_sd, length.out = 1000)\ntemp_df <- data.frame(temperature = temp_range)\n\n# Create visualization\nggplot(temp_df, aes(x = temperature)) +\n  stat_function(\n    fun = dnorm, args = list(mean = temp_mean, sd = temp_sd),\n    color = \"blue\"\n  ) +\n  geom_vline(xintercept = thresh, linetype = \"dashed\", color = \"red\") +\n  annotate(\"text\",\n    x = thresh + 0.5, y = 0.2,\n    label = \"Environmental\\nThreshold\",\n    color = \"red\", hjust = 0\n  ) +\n  labs(\n    title = \"Stream Water Temperature Distribution\",\n    subtitle = \"Daily measurements follow a pattern we can describe\",\n    x = \"Temperature (°C)\",\n    y = \"Relative Frequency\"\n  ) +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/water_temp_example-1.png){width=960}\n:::\n:::\n\n\n\nThis pattern in our data lets us:\n- Predict future temperatures\n- Assess risks to aquatic life\n- Plan monitoring strategies\n- Make management decisions\n\nUnderstanding how to describe and work with these patterns is key to environmental science.\n\n# Properties of a Continuous Distribution\n\n- For any continuous distribution\n  - There is an infinite number of possible values;\n  - These values may be within a fixed interval. For example, male human heights (in cm) belong to [54.6,272].\n\n[Human height](https://en.wikipedia.org/wiki/Human_height)\n\n- Specific values in a continuous distribution have probability 0. For example, the likelihood of measuring a Simmental cow at exactly 450kg is zero. This is because there are potentially an infinite number of other weights that are higher or lower than 450 kg so we say that measuring exactly 450 has a very very small probability which is equivalent to zero\n- The total of all the probabilities = must be 1. (Total area under the pdf)\n\n\n\n# The Normal Distribution\n\n- The Normal Distribution is **super important** because it occurs everywhere! It naturally describes many natural phenomenon and is a great for modelling the sample mean.\n- It is a symmetric bell-shaped variable with two parameters $\\mu$ and $\\sigma^2$ such that:\n\n$X\\sim{N(\\mu,\\sigma^2)}$\n\n\n\n# The Standard Normal Curve\n\n- The standard normal curve is one where the mean = 0, and variance = 1\n\n$X\\sim{N(\\mu=0,\\sigma^2=1)}$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a sequence of values for the x-axis\nx_values <- seq(-4, 4, by = 0.01)\n\n# Create a data frame to hold these values\ndata_frame <- data.frame(x_values)\n\n# Plot the standard normal curve\nggplot(data_frame, aes(x = x_values)) +\n  stat_function(\n    fun = dnorm, args = list(mean = 0, sd = 1),\n    color = \"blue\"\n  ) +\n  labs(\n    title = \"Standard Normal Curve\",\n    x = \"Z-Score\",\n    y = \"Density\"\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/standard_normal_curve-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n# The General Normal Curve\n\n- Simmental cattle gestation times…\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define parameters\nmean <- 284.3\nsd <- 5.52\n\n# Create data and plot\nx_values <- seq(mean - 4 * sd, mean + 4 * sd, length.out = 1000)\ndf <- data.frame(x = x_values)\n\nggplot(df, aes(x = x_values)) +\n  stat_function(\n    fun = dnorm, args = list(mean = mean, sd = sd),\n    color = \"blue\"\n  ) +\n  labs(\n    title = \"Normal Distribution Curve\",\n    x = \"Gestation Period (days)\",\n    y = \"Density\"\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/general_normal_curve-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n# The General Normal Distribution\n\nIf $X\\sim{N(\\mu,\\sigma^2)}$ \n\n- PDF\n\n$f(x | \\mu, \\sigma) = \\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{1}{2}\\left(\\frac{x - \\mu}{\\sigma}\\right)^2}$ for $x \\in (-\\infty,\\infty)$\n\n- CDF\n\n$F(x)=P(X\\le x)=\\int_{-\\infty}^x f(y)dy$\n\n\n\n\n\n# Types of Normal Probabilitites\n\n- There are 3 type of probabilities that we are interested in:\n  - Tail probabilities (lower and upper) = Cumulative probabilities\n  - Interval probabilities;\n  - Inverse probabilities.\n\n\n\n\n# Normal distribution in R\n\n![](images/Normal_R.png)\n\n\n\n\n# Types of Normal Probabilities in Environmental Science\n\n## Lower Tail: Early Warning Thresholds\n\n**Water Temperature Example:** $P(T\\le 20)$ - Risk of cold stress\n**Gestation Example:** $P(X\\le 275)$ - Early birth monitoring\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probabilities\np_cold <- pnorm(20, temp_mean, temp_sd)\np_early <- pnorm(275, 284.3, 5.52)\n\n# Create temperature plot\ntemp_plot <- ggplot(temp_df, aes(x = temperature)) +\n  stat_function(\n    fun = dnorm, args = list(mean = temp_mean, sd = temp_sd),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(temp_df, temperature <= 20),\n    aes(y = dnorm(temperature, temp_mean, temp_sd)),\n    fill = \"blue\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = 20, linetype = \"dashed\", color = \"darkblue\") +\n  labs(\n    title = \"Water Temperature\",\n    subtitle = sprintf(\"P(T ≤ 20°C) = %.1f%%\", p_cold * 100),\n    x = \"Temperature (°C)\",\n    y = \"Density\"\n  )\n\n# Create gestation plot\ngest_df <- data.frame(\n  days = seq(284.3 - 4 * 5.52, 284.3 + 4 * 5.52, length.out = 1000)\n)\n\ngest_plot <- ggplot(gest_df, aes(x = days)) +\n  stat_function(\n    fun = dnorm, args = list(mean = 284.3, sd = 5.52),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(gest_df, days <= 275),\n    aes(y = dnorm(days, 284.3, 5.52)),\n    fill = \"blue\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = 275, linetype = \"dashed\", color = \"darkblue\") +\n  labs(\n    title = \"Gestation Period\",\n    subtitle = sprintf(\"P(X ≤ 275 days) = %.1f%%\", p_early * 100),\n    x = \"Days\",\n    y = \"Density\"\n  )\n\n# Display plots side by side\ngridExtra::grid.arrange(temp_plot, gest_plot, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/lower_tail_examples-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Print probabilities with context\ncat(\"Environmental Implications:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nEnvironmental Implications:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% chance of temperatures below cold stress threshold\\n\", p_cold * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 9.1% chance of temperatures below cold stress threshold\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% chance of early birth (before 275 days)\\n\", p_early * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 4.6% chance of early birth (before 275 days)\n```\n\n\n:::\n:::\n\n\n\nThese lower tail probabilities help us:\n- Identify risks of extreme events\n- Plan monitoring and intervention strategies\n- Set appropriate warning thresholds\n- Make evidence-based management decisions\n\n\n\n\n\n\n# Upper Tail Probabilities: Critical Thresholds\n\nMonitoring values above critical thresholds helps identify potential risks:\n\n## Environmental Management Examples:\n- Water temperature above stress threshold: $P(T\\ge 24)$\n- Extended gestation period: $P(X\\ge 290)$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probabilities\np_heat <- 1 - pnorm(24, temp_mean, temp_sd)\np_late <- 1 - pnorm(290, 284.3, 5.52)\n\n# Plot temperature threshold\ntemp_plot <- ggplot(temp_df, aes(x = temperature)) +\n  stat_function(\n    fun = dnorm, args = list(mean = temp_mean, sd = temp_sd),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(temp_df, temperature >= 24),\n    aes(y = dnorm(temperature, temp_mean, temp_sd)),\n    fill = \"red\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = 24, linetype = \"dashed\", color = \"red\") +\n  labs(\n    title = \"Water Temperature\",\n    subtitle = sprintf(\"P(T ≥ 24°C) = %.1f%%\", p_heat * 100),\n    x = \"Temperature (°C)\",\n    y = \"Density\"\n  ) +\n  annotate(\"text\",\n    x = 25, y = 0.2,\n    label = \"Critical\\nThreshold\",\n    color = \"red\"\n  )\n\n# Plot gestation threshold\ngest_plot <- ggplot(gest_df, aes(x = days)) +\n  stat_function(\n    fun = dnorm, args = list(mean = 284.3, sd = 5.52),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(gest_df, days >= 290),\n    aes(y = dnorm(days, 284.3, 5.52)),\n    fill = \"red\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = 290, linetype = \"dashed\", color = \"red\") +\n  labs(\n    title = \"Gestation Period\",\n    subtitle = sprintf(\"P(X ≥ 290 days) = %.1f%%\", p_late * 100),\n    x = \"Days\",\n    y = \"Density\"\n  ) +\n  annotate(\"text\",\n    x = 291, y = 0.05,\n    label = \"Extended\\nGestation\",\n    color = \"red\"\n  )\n\n# Display plots side by side\ngridExtra::grid.arrange(temp_plot, gest_plot, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/upper_tail_examples-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Print management implications\ncat(\"Management Implications:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nManagement Implications:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% risk of thermal stress for aquatic life\\n\", p_heat * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 9.1% risk of thermal stress for aquatic life\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% chance of extended gestation requiring monitoring\\n\", p_late * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 15.1% chance of extended gestation requiring monitoring\n```\n\n\n:::\n:::\n\n\n\n### Risk Management Applications:\n1. Environmental threshold monitoring\n2. Early warning systems\n3. Resource allocation planning\n4. Intervention timing decisions\n\n\n\n\n\n\n\n# Normal Operating Ranges: Interval Probabilities\n\nIn environmental monitoring and animal health, we often need to know the probability of measurements falling within expected ranges:\n\n**Examples:**\n- Stream temperature in optimal range: $P(21\\le T\\le 23)$\n- Normal gestation period: $P(280\\le X\\le 285)$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probabilities for both examples\np_temp_normal <- diff(pnorm(c(21, 23), temp_mean, temp_sd))\np_gest_normal <- diff(pnorm(c(280, 285), 284.3, 5.52))\n\n# Create temperature plot\ntemp_plot <- ggplot(temp_df, aes(x = temperature)) +\n  stat_function(\n    fun = dnorm, args = list(mean = temp_mean, sd = temp_sd),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(temp_df, temperature >= 21 & temperature <= 23),\n    aes(y = dnorm(temperature, temp_mean, temp_sd)),\n    fill = \"green\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = c(21, 23), linetype = \"dashed\", color = \"darkgreen\") +\n  labs(\n    title = \"Stream Temperature\",\n    subtitle = sprintf(\"Optimal Range: %.1f%% between 21-23°C\", p_temp_normal * 100),\n    x = \"Temperature (°C)\",\n    y = \"Density\"\n  )\n\n# Create gestation plot\ngest_plot <- ggplot(gest_df, aes(x = days)) +\n  stat_function(\n    fun = dnorm, args = list(mean = 284.3, sd = 5.52),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(gest_df, days >= 280 & days <= 285),\n    aes(y = dnorm(days, 284.3, 5.52)),\n    fill = \"green\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = c(280, 285), linetype = \"dashed\", color = \"darkgreen\") +\n  labs(\n    title = \"Gestation Period\",\n    subtitle = sprintf(\"Normal Range: %.1f%% between 280-285 days\", p_gest_normal * 100),\n    x = \"Days\",\n    y = \"Density\"\n  )\n\n# Display plots side by side\ngridExtra::grid.arrange(temp_plot, gest_plot, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/interval_ranges-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Print implications\ncat(\"Monitoring Implications:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMonitoring Implications:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% of temperature readings should fall in optimal range\\n\", p_temp_normal * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 49.5% of temperature readings should fall in optimal range\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- %.1f%% of births expected during normal period\\n\", p_gest_normal * 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- 33.2% of births expected during normal period\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\nManagement Applications:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nManagement Applications:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"1. Setting monitoring frequency\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1. Setting monitoring frequency\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"2. Resource allocation planning\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2. Resource allocation planning\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"3. Early intervention thresholds\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3. Early intervention thresholds\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"4. Performance benchmarking\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n4. Performance benchmarking\n```\n\n\n:::\n:::\n\n\n\nThis analysis shows how interval probabilities help:\n- Define normal operating conditions\n- Set realistic expectations\n- Plan resource allocation\n- Design monitoring programs\n\n\n\n\n\n# Finding Critical Values for Management\n\nWhen designing monitoring programs, we often need to find values that capture specific probabilities:\n\n- What temperature should trigger interventions? $P(T \\le x)=0.9$\n- When should we flag delayed births? $P(X \\le x)=0.95$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate critical values\ntemp_90 <- qnorm(0.9, temp_mean, temp_sd)\ngest_95 <- qnorm(0.95, 284.3, 5.52)\n\n# Create temperature plot with critical value\ntemp_plot <- ggplot(temp_df, aes(x = temperature)) +\n  stat_function(\n    fun = dnorm, args = list(mean = temp_mean, sd = temp_sd),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(temp_df, temperature <= temp_90),\n    aes(y = dnorm(temperature, temp_mean, temp_sd)),\n    fill = \"purple\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = temp_90, linetype = \"dashed\", color = \"purple\") +\n  annotate(\"text\",\n    x = temp_90, y = 0.2,\n    label = sprintf(\"90th Percentile\\n%.1f°C\", temp_90),\n    color = \"purple\", hjust = -0.1\n  ) +\n  labs(\n    title = \"Water Temperature Critical Value\",\n    subtitle = \"90% of readings fall below this threshold\",\n    x = \"Temperature (°C)\",\n    y = \"Density\"\n  )\n\n# Create gestation plot with critical value\ngest_plot <- ggplot(gest_df, aes(x = days)) +\n  stat_function(\n    fun = dnorm, args = list(mean = 284.3, sd = 5.52),\n    color = \"blue\"\n  ) +\n  geom_area(\n    data = subset(gest_df, days <= gest_95),\n    aes(y = dnorm(days, 284.3, 5.52)),\n    fill = \"purple\", alpha = 0.3\n  ) +\n  geom_vline(xintercept = gest_95, linetype = \"dashed\", color = \"purple\") +\n  annotate(\"text\",\n    x = gest_95, y = 0.05,\n    label = sprintf(\"95th Percentile\\n%.1f days\", gest_95),\n    color = \"purple\", hjust = -0.1\n  ) +\n  labs(\n    title = \"Gestation Period Critical Value\",\n    subtitle = \"95% of births occur before this time\",\n    x = \"Days\",\n    y = \"Density\"\n  )\n\n# Display plots side by side\ngridExtra::grid.arrange(temp_plot, gest_plot, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/critical_values-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Print management implications\ncat(\"Management Thresholds:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nManagement Thresholds:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- Consider interventions when temperature exceeds %.1f°C\\n\", temp_90))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- Consider interventions when temperature exceeds 23.9°C\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(sprintf(\"- Investigate if gestation exceeds %.1f days\\n\", gest_95))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- Investigate if gestation exceeds 293.4 days\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\nApplications:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nApplications:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"1. Setting monitoring thresholds\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1. Setting monitoring thresholds\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"2. Designing intervention protocols\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2. Designing intervention protocols\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"3. Resource planning\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3. Resource planning\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"4. Risk assessment\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n4. Risk assessment\n```\n\n\n:::\n:::\n\n\n\nThese critical values help establish evidence-based management protocols and early warning systems.\n\n# Connecting Probability to Sampling\n\nWe've seen how to:\n- Calculate various types of probabilities\n- Work with environmental thresholds\n- Make evidence-based decisions\n\nBut in real-world monitoring, we rarely know the true population parameters. Instead:\n- We take samples\n- Calculate sample statistics\n- Use these to make inferences\n\n## Key Questions\n\nThis leads us to two crucial questions:\n1. How do sample means behave?\n2. How reliable are our probability calculations with sample data?\n\nThe Central Limit Theorem will help us answer these questions...\n\n# Progress Check ✓\n\nLet's review what we've learned about probability calculations:\n\n- We can calculate different types of probabilities:\n  * Lower tail: $P(X \\leq x)$ - early warning\n  * Upper tail: $P(X \\geq x)$ - critical thresholds\n  * Interval: $P(a \\leq X \\leq b)$ - normal ranges\n  * Inverse: Finding $x$ for given probability\n\n- These help us:\n  * Assess environmental risks\n  * Set monitoring thresholds\n  * Make evidence-based decisions\n  * Plan interventions\n\n- Questions to consider:\n  * How do these calculations change with sample data?\n  * What happens to probabilities as sample size changes?\n\n\n\n\n\n\n\n# Example \n\n- Let's return to our example for American Simmental cattle where $X~N(284.3, 5.522)$, \n- What is the probability of a gestation time less than 275 days.\n\nSo we need to calculate the lower Tail probability such that: $P(X \\le 275)$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probability of early gestation\n# P(X ≤ 275) where X ~ N(284.3, 5.52²)\npnorm(275, 284.3, 5.52)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.04601526\n```\n\n\n:::\n:::\n\n\n\n- One would expect around 5% of gestation times would be less than 275 days/\n- **Question for you:** Why might this be important, how can we use these results??\n\n![vxnaghiyev - stock.adobe.com](images/AdobeStock_685071114.jpeg)\n\n\n\n\n\n# Back to the Standard Normal Curve\n\n- Sometimes it is useful to standardise “data” as it allows us to compare samples that are drawn from populations that may have different means and standard deviations\n- Luckily for us we can standardise any general normal distribution $X\\sim{N(\\mu,\\sigma^2)}$ to a standard normal distribution $X\\sim{N(0,1)}$\n- This was also useful as we could use a set of standard normal tables to calculate probabilities (before computers were readily available).\n\n$P(X \\le x)=P\\left(\\frac{X-\\mu}{\\sigma},\\frac{x-\\mu}{\\sigma}\\right)=P\\left(Z \\le \\frac{x-\\mu}{\\sigma}\\right)$\n\n\n\n\n\n\n# Standard Normal Curve\n\n- Example: if $X\\sim{N(10,9)}$ find $P(X \\le 14)$\n\n$P(X \\le x)=P\\left(\\frac{X-\\mu}{\\sigma},\\frac{x-\\mu}{\\sigma}\\right)=P\\left(Z \\le \\frac{x-\\mu}{\\sigma}\\right)$\n\n$P(X \\le 14)=P\\left(\\frac{X-10}{\\sqrt9},\\frac{14-10}{\\sqrt9}\\right)=P\\left(Z \\le \\frac{4}{3}\\right)$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate P(X ≤ 14) where X ~ N(10, 9)\n# Method 1: Direct calculation\nprob1 <- pnorm(14, 10, 3)\n\n# Method 2: Using standardized value\nprob2 <- pnorm(4 / 3, 0, 1)\n\n# Method 3: Using standardized value (default parameters)\nprob3 <- pnorm(4 / 3)\n\n# Display results\nc(direct = prob1, standardized = prob2, default = prob3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      direct standardized      default \n   0.9087888    0.9087888    0.9087888 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n# Percentiles of the Standard Normal Curve\n\n- 1 Standard deviation from the mean = 68% of the data\n\n![](images/Percentile1.png)\n\n\n\n\n\n# Percentiles of the Standard Normal Curve\n\n- 2 Standard deviations from the mean = 95% of the data\n\n![](images/Percentile2.png)\n\n\n\n\n\n\n\n# Percentiles of the Standard Normal Curve\n\n- 3 Standard deviations from the mean = 99.7% of the data\n\n![](images/Percentile3.png)\n\n\n\n\n\n\n\n# Not so Normal Distributions\n\n- Student T: The Student T distribution models a symmetric bell-shaped variable with thicker tails than a Normal.\n- We say the variable $X \\sim t_n$, with $n$ degrees of freedom.\n- It has an extra parameter = $n$ which is related to population size\n- The T distribution is used for the 1 and 2 sample T-tests which are really important in the next few weeks.\n\n![](images/t_dist.png)\n\n\n\n\n# Not so Normal Distributions\n\n- The Chi-Squared distribution models a variable which can only take positive values and is skewed in distribution.\n- We say the variable $X \\sim \\chi_n^2$, with $n$ degrees of freedom.\n- The Chi-Squared distribution is used for the Chi-Squared Test which you will cover in the next few weeks.\n\n![](images/Chi_dist.png)\n\n\n\n\n# Sampling distributions\n\n- Rye grass root growth (in mg dry weight) follows the distribution $X \\sim N(300, 502)$.\n - 1. One measurement is taken: how likely is it that the dry weight exceeds 320 mg?\n - 2. 10 measurements are taken: how likely is it that the sample mean exceeds 320 mg?\n\n![SERHII BLIK - stock.adobe.com](images/AdobeStock_364743175.jpeg)\n\n\n\n\n\n# Sampling distributions\n\n- Here, we are dealing with 2 distributions:\n  - (1) Measurement: $X \\sim N(300,50^2)$\n  - (2) Sample Mean of 10 measurements: $\\overline X = \\frac{1}{10}\\Sigma_{i=1}^{10} X_i \\sim ...$\n\n\n\n\n# How does the sampling distribution occur?\n\n- http://onlinestatbook.com/stat_sim/sampling_dist/\n- We have a population $X$\n  - We take a sample of size $n$ and we calculate the mean $\\overline x_1$\n  - We take another sample of size $n$ and we calculate the mean $\\overline x_2$\n  - We take another sample of size $n$ and we calculate the mean $\\overline x_3$\n…\nIf we sample all possibilities, then the sampling distribution of $\\overline X = \\frac{1}{10}\\Sigma_{i=1}^{10} X_i$  is the distribution of $\\{\\overline x_1, \\overline x_2, \\overline x_3,...\\}$\n\n\n\n\n\n# Distribution for a sample mean\n\n- if $X\\sim{N(\\mu,\\sigma^2)}$\n- then $\\overline X\\sim{N(\\mu,\\frac{\\sigma^2}{n})}$\n- Note that we call\n  - $\\sigma$ the standard deviation such that $sd(X)=\\sigma$, and\n  - $\\sigma/\\sqrt n$ the standard error such that $sd(\\overline X)=\\sigma/\\sqrt n$\n- The standard error is important for making inference on a sample populations i.e. how close your sample mean $\\overline x$ is to the population mean $\\mu$\n\n\n\n\n# Example\n\n- Rye grass root growth (in mg dry weight) follows the distribution \n$X \\sim N(300,50^2)$.\n  - (1) One measurement is taken: how likely is it that the dry weight exceeds 320 mg?\n  - (2) 10 measurements are taken: how likely is it that the sample mean exceeds 320 mg?\n\n\n\n\n\n\n\n# Example\n\n- (1) X = Rye grass root growth $\\sim N(300,50^2)$\n\n$P(X>320) = P\\left(\\frac{X-\\mu}{\\sigma},\\frac{x-\\mu}{\\sigma}\\right)=P\\left(\\frac{X-300}{50}>\\frac{320-300}{50}\\right)$\n$=P(Z > 0.4)$\n$=1-P(Z < 0.4)$\n$\\approx 1-0.66 = 0.34$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - pnorm(0.4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3445783\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n# Example\n\n- (1) $\\overline X$ = Rye grass root growth $\\sim N(300,\\frac{50^2}{10})$\n\n$P(\\overline X>320) = P\\left(\\frac{\\overline X-\\mu}{\\frac{\\sigma}{\\sqrt{n}}},\\frac{x-\\mu}{\\frac{\\sigma}{\\sqrt{n}}}\\right)=P\\left(\\frac{\\overline X-300}{\\frac{50}{\\sqrt{10}}}>\\frac{320-300}{\\frac{50}{\\sqrt{10}}}\\right)$\n$=P(Z > 1.26)$\n$=1-P(Z < 1.26)$\n$\\approx 1-0.90 = 0.10$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probability of sample mean exceeding 320mg\n# P(X̄ > 320) where X̄ ~ N(300, 50²/10)\n# Standardized to P(Z > 1.26)\n1 - pnorm(1.26)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1038347\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# The Central Limit Theorem in Environmental Monitoring\n\n## Why This Matters\n\nIn environmental science, we often face:\n- Non-normal data (e.g., pollution levels, species counts)\n- Need to aggregate multiple measurements\n- Want to make reliable inferences\n\nThe Central Limit Theorem (CLT) tells us:\n- Sample means follow a normal distribution\n- Regardless of the original distribution shape\n- More samples = more normally distributed\n\n## Requirements for CLT\n\nFor reliable results, we need:\n1. Independent random samples\n2. Large enough sample size:\n   - n > 30 for skewed data (e.g., pollution levels)\n   - n > 15 for symmetric data (e.g., temperature readings)\n3. Finite variance exists\n\n## Environmental Applications\n\nLet's see this in action with environmental data...\n\n## Example: Water Quality Monitoring\n\nConsider daily pollution measurements:\n- Often right-skewed (many low values, few high spikes)\n- Single readings can be misleading\n- Need to understand behavior of sample means\n\n\n\n\n\n\n# CLT in Environmental Monitoring\n\nLet's demonstrate how the CLT works with real environmental data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set random seed for reproducibility\nset.seed(123)\n\n# Define parameters\nnumber_of_samples <- 1000\nsample_sizes <- c(5, 10, 30, 50)\ndistributions <- list(\n  \"Normal\" = rnorm,\n  \"Exponential\" = rexp,\n  \"Chi-Squared (df = 2)\" = function(n) rchisq(n, df = 2)\n)\n\n# Function to generate sample means\ngenerate_sample_means <- function(sample_size, number_of_samples, dist_function) {\n  sapply(1:number_of_samples, function(x) mean(dist_function(sample_size)))\n}\n\n# Generate sample means for all combinations\nsample_means_list <- lapply(distributions, function(dist_function) {\n  lapply(sample_sizes, generate_sample_means,\n    number_of_samples = number_of_samples,\n    dist_function = dist_function\n  )\n})\n\n# Convert to data frame\nsample_means_df <- do.call(rbind, lapply(names(distributions), function(dist_name) {\n  do.call(rbind, lapply(1:length(sample_sizes), function(i) {\n    data.frame(\n      Distribution = dist_name,\n      Sample_Size = sample_sizes[i],\n      Sample_Mean = sample_means_list[[dist_name]][[i]]\n    )\n  }))\n}))\n```\n:::\n\n\n\n\n\n\n\n# Central Limit Theorem in Action\n\n## Environmental Monitoring Examples\nWe'll demonstrate the CLT using three types of environmental data:\n1. Stream temperatures (normally distributed)\n2. Air pollution levels (right-skewed)\n3. Species counts (discrete data)\n\n## Visualizing the CLT\nLet's see how sample means behave as sample size increases:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Rename distributions to environmental context\nsample_means_df <- sample_means_df %>%\n  mutate(Distribution = case_when(\n    Distribution == \"Normal\" ~ \"Stream Temperature\",\n    Distribution == \"Exponential\" ~ \"Air Pollution\",\n    Distribution == \"Chi-Squared (df = 2)\" ~ \"Species Abundance\",\n    TRUE ~ Distribution\n  ))\n\n# Enhanced visualization\nggplot(sample_means_df, aes(x = Sample_Mean)) +\n  # Add density estimate\n  geom_density(color = \"red\", linewidth = 1) +\n  # Add histogram with improved aesthetics\n  geom_histogram(\n    aes(y = after_stat(density)),\n    bins = 30,\n    fill = \"steelblue\",\n    alpha = 0.7,\n    color = \"white\"\n  ) +\n  # Facet by distribution type and sample size\n  facet_grid(\n    Distribution ~ Sample_Size,\n    scales = \"free\",\n    labeller = labeller(\n      Distribution = c(\n        \"Stream Temperature\" = \"Temperature (°C)\\nNormally Distributed\",\n        \"Air Pollution\" = \"PM2.5 Levels\\nRight-Skewed\",\n        \"Species Abundance\" = \"Species Counts\\nDiscrete Data\"\n      )\n    )\n  ) +\n  # Improved labels\n  labs(\n    title = \"Central Limit Theorem in Environmental Monitoring\",\n    subtitle = \"Sample means approach normal distribution as sample size increases\",\n    x = \"Sample Mean\",\n    y = \"Density\"\n  ) +\n  # Consistent theme\n  theme_cowplot() +\n  theme(\n    panel.spacing = unit(1, \"lines\"),\n    strip.text = element_text(face = \"bold\"),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 10))\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-04_files/figure-revealjs/clt_enhanced_viz-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Print environmental monitoring implications\ncat(\"\\nImplications for Environmental Monitoring:\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nImplications for Environmental Monitoring:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"1. Stream Temperature:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1. Stream Temperature:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Even small samples (n=10) give reliable means\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Even small samples (n=10) give reliable means\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Good for continuous monitoring programs\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Good for continuous monitoring programs\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"2. Air Pollution:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2. Air Pollution:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Requires larger samples (n≥30) for reliable means\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Requires larger samples (n≥30) for reliable means\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Important for regulatory compliance\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Important for regulatory compliance\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"3. Species Abundance:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3. Species Abundance:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Needs n≥30 for normal approximation\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Needs n≥30 for normal approximation\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"   - Critical for biodiversity assessments\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   - Critical for biodiversity assessments\n```\n\n\n:::\n:::\n\n\n\n## Key Points for Environmental Scientists\n\nThe CLT helps us:\n\n1. Design monitoring programs\n   - Choose appropriate sample sizes\n   - Set sampling frequencies\n   - Balance cost and accuracy\n\n2. Make reliable inferences\n   - Estimate population parameters\n   - Calculate confidence intervals\n   - Test hypotheses about means\n\n3. Ensure quality control\n   - Set warning thresholds\n   - Monitor system changes\n   - Make evidence-based decisions\n\n# Looking Ahead: CLT and Hypothesis Testing\n\nThe CLT is fundamental to statistical inference because it tells us that:\n\n1. Sample Means are Normally Distributed\n   * Even when original data isn't normal\n   * Enables use of z-tests and t-tests\n   * Supports confidence interval calculations\n\n2. Standard Error Matters\n   * Measures uncertainty in sample means\n   * Decreases with larger sample sizes: $SE = \\frac{\\sigma}{\\sqrt{n}}$\n   * Helps determine required sample sizes\n\n3. Coming Up in Future Lectures\n   * One-sample tests: Compare means to standards\n   * Two-sample tests: Compare different treatments\n   * ANOVA: Compare multiple groups\n\n**Example:** When testing if stream temperatures exceed regulatory limits, we'll use:\n\n- Sample means (normally distributed thanks to CLT)\n- Standard error (to assess uncertainty)\n- t-tests (based on normal distribution assumptions)\n\n\n# Progress Check: Probability and CLT ✓\n\nLet's connect what we've learned:\n\n1. Probability Calculations\n   * Lower tail $P(X \\leq x)$ - Early warning\n   * Upper tail $P(X \\geq x)$ - Critical thresholds\n   * Intervals $P(a \\leq X \\leq b)$ - Normal ranges\n\n2. Sample Means (CLT)\n   * Approach normal distribution\n   * More reliable with larger samples\n   * Enable statistical inference\n\n3. Applications\n   * Design monitoring programs\n   * Set evidence-based thresholds\n   * Make reliable predictions\n\n**Key Achievement:** You can now connect probability theory to practical environmental monitoring decisions! 🎯\n\n\n\n# Thanks!\n\nThis presentation is based on the [SOLES Quarto reveal.js template](https://github.com/usyd-soles-edu/soles-revealjs) and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by].\n\n<!-- Links -->\n[cc-by]: http://creativecommons.org/licenses/by/4.0/\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}